{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 223, "column": 0}, "map": {"version":3,"sources":["file:///D:/h2skill/Manas_Mitra_Chatbot/src/ai/genkit.ts"],"sourcesContent":["import {genkit} from 'genkit';\r\nimport {googleAI} from '@genkit-ai/googleai';\r\n\r\nexport const ai = genkit({\r\n  plugins: [googleAI()],\r\n  model: 'googleai/gemini-2.5-flash',\r\n});\r\n"],"names":[],"mappings":";;;AAAA;AAAA;AACA;AAAA;;;AAEO,MAAM,KAAK,CAAA,GAAA,uIAAA,CAAA,SAAM,AAAD,EAAE;IACvB,SAAS;QAAC,CAAA,GAAA,2KAAA,CAAA,WAAQ,AAAD;KAAI;IACrB,OAAO;AACT","debugId":null}},
    {"offset": {"line": 244, "column": 0}, "map": {"version":3,"sources":["file:///D:/h2skill/Manas_Mitra_Chatbot/src/ai/flows/daily-affirmations.ts"],"sourcesContent":["'use server';\r\n\r\n/**\r\n * @fileOverview A flow for generating daily affirmations for youth.\r\n *\r\n * - generateAffirmation - A function that generates an encouraging affirmation.\r\n * - GenerateAffirmationInput - The input type for the generateAffirmation function.\r\n * - GenerateAffirmationOutput - The return type for the generateAffirmation function.\r\n */\r\n\r\nimport {ai} from '@/ai/genkit';\r\nimport {z} from 'genkit';\r\n\r\nconst GenerateAffirmationInputSchema = z.object({\r\n  mood: z\r\n    .string()\r\n    .optional()\r\n    .describe('The current mood of the user, can be positive or negative.'),\r\n});\r\nexport type GenerateAffirmationInput = z.infer<typeof GenerateAffirmationInputSchema>;\r\n\r\nconst GenerateAffirmationOutputSchema = z.object({\r\n  affirmation: z.string().describe('An encouraging and supportive affirmation.'),\r\n});\r\nexport type GenerateAffirmationOutput = z.infer<typeof GenerateAffirmationOutputSchema>;\r\n\r\nexport async function generateAffirmation(\r\n  input: GenerateAffirmationInput\r\n): Promise<GenerateAffirmationOutput> {\r\n  return generateAffirmationFlow(input);\r\n}\r\n\r\nconst prompt = ai.definePrompt({\r\n  name: 'generateAffirmationPrompt',\r\n  input: {schema: GenerateAffirmationInputSchema},\r\n  output: {schema: GenerateAffirmationOutputSchema},\r\n  prompt: `You are a mental wellness assistant for youths, skilled at providing encouraging and supportive affirmations.\r\n\r\n  Based on the user's current mood, generate a personalized affirmation to uplift and motivate them. The affirmation should be short, positive, and relevant to the user's potential emotional state.\r\n\r\n  Mood: {{{mood}}}\r\n\r\n  Affirmation:`,\r\n});\r\n\r\nconst generateAffirmationFlow = ai.defineFlow(\r\n  {\r\n    name: 'generateAffirmationFlow',\r\n    inputSchema: GenerateAffirmationInputSchema,\r\n    outputSchema: GenerateAffirmationOutputSchema,\r\n  },\r\n  async input => {\r\n    const {output} = await prompt(input);\r\n    return output!;\r\n  }\r\n);\r\n"],"names":[],"mappings":";;;;;AAEA;;;;;;CAMC,GAED;AACA;AAAA;;;;;;AAEA,MAAM,iCAAiC,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAC9C,MAAM,uIAAA,CAAA,IAAC,CACJ,MAAM,GACN,QAAQ,GACR,QAAQ,CAAC;AACd;AAGA,MAAM,kCAAkC,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAC/C,aAAa,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;AACnC;AAGO,eAAe,oBACpB,KAA+B;IAE/B,OAAO,wBAAwB;AACjC;AAEA,MAAM,SAAS,mHAAA,CAAA,KAAE,CAAC,YAAY,CAAC;IAC7B,MAAM;IACN,OAAO;QAAC,QAAQ;IAA8B;IAC9C,QAAQ;QAAC,QAAQ;IAA+B;IAChD,QAAQ,CAAC;;;;;;cAMG,CAAC;AACf;AAEA,MAAM,0BAA0B,mHAAA,CAAA,KAAE,CAAC,UAAU,CAC3C;IACE,MAAM;IACN,aAAa;IACb,cAAc;AAChB,GACA,OAAM;IACJ,MAAM,EAAC,MAAM,EAAC,GAAG,MAAM,OAAO;IAC9B,OAAO;AACT;;;IA5BoB;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 307, "column": 0}, "map": {"version":3,"sources":["file:///D:/h2skill/Manas_Mitra_Chatbot/src/ai/flows/empathetic-response-to-daily-checkin.ts"],"sourcesContent":["'use server';\r\n\r\n/**\r\n * @fileOverview Generates an empathetic and personalized response based on the user's daily check-in.\r\n *\r\n * - empatheticResponseToDailyCheckin - A function that generates an empathetic response.\r\n * - EmpatheticResponseToDailyCheckinInput - The input type for the empatheticResponseToDailyCheckin function.\r\n * - EmpatheticResponseToDailyCheckinOutput - The return type for the empatheticResponseToDailyCheckin function.\r\n */\r\n\r\nimport {ai} from '@/ai/genkit';\r\nimport {z} from 'genkit';\r\n\r\nconst EmpatheticResponseToDailyCheckinInputSchema = z.object({\r\n  mood: z.string().describe('The mood of the user reported in the daily check-in.'),\r\n  feelings: z.string().describe('The specific feelings the user is experiencing.'),\r\n  details: z.string().optional().describe('Additional details about the user\\'s day, if provided.'),\r\n});\r\nexport type EmpatheticResponseToDailyCheckinInput = z.infer<typeof EmpatheticResponseToDailyCheckinInputSchema>;\r\n\r\nconst EmpatheticResponseToDailyCheckinOutputSchema = z.object({\r\n  response: z.string().describe('An empathetic and personalized response to the user\\'s daily check-in.'),\r\n});\r\nexport type EmpatheticResponseToDailyCheckinOutput = z.infer<typeof EmpatheticResponseToDailyCheckinOutputSchema>;\r\n\r\nexport async function empatheticResponseToDailyCheckin(input: EmpatheticResponseToDailyCheckinInput): Promise<EmpatheticResponseToDailyCheckinOutput> {\r\n  return empatheticResponseToDailyCheckinFlow(input);\r\n}\r\n\r\nconst prompt = ai.definePrompt({\r\n  name: 'empatheticResponseToDailyCheckinPrompt',\r\n  input: {schema: EmpatheticResponseToDailyCheckinInputSchema},\r\n  output: {schema: EmpatheticResponseToDailyCheckinOutputSchema},\r\n  prompt: `You are an AI assistant designed to provide empathetic and personalized responses to youth based on their daily check-in.\r\n\r\n  Here is the information from their check-in:\r\n  Mood: {{{mood}}}\r\n  Feelings: {{{feelings}}}\r\n  Details: {{{details}}}\r\n\r\n  Based on this information, craft a supportive and understanding response. Acknowledge their feelings and offer encouragement.\r\n  Keep the response concise and easy to understand.\r\n  The response should be in first person.\r\n  Do not include any questions in the response.  Do not include any links or references to external resources.\r\n  The response should be no more than 5 sentences.\r\n  `,\r\n});\r\n\r\nconst empatheticResponseToDailyCheckinFlow = ai.defineFlow(\r\n  {\r\n    name: 'empatheticResponseToDailyCheckinFlow',\r\n    inputSchema: EmpatheticResponseToDailyCheckinInputSchema,\r\n    outputSchema: EmpatheticResponseToDailyCheckinOutputSchema,\r\n  },\r\n  async input => {\r\n    const {output} = await prompt(input);\r\n    return output!;\r\n  }\r\n);\r\n"],"names":[],"mappings":";;;;;AAEA;;;;;;CAMC,GAED;AACA;AAAA;;;;;;AAEA,MAAM,8CAA8C,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAC3D,MAAM,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IAC1B,UAAU,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IAC9B,SAAS,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,GAAG,QAAQ,CAAC;AAC1C;AAGA,MAAM,+CAA+C,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAC5D,UAAU,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;AAChC;AAGO,eAAe,iCAAiC,KAA4C;IACjG,OAAO,qCAAqC;AAC9C;AAEA,MAAM,SAAS,mHAAA,CAAA,KAAE,CAAC,YAAY,CAAC;IAC7B,MAAM;IACN,OAAO;QAAC,QAAQ;IAA2C;IAC3D,QAAQ;QAAC,QAAQ;IAA4C;IAC7D,QAAQ,CAAC;;;;;;;;;;;;EAYT,CAAC;AACH;AAEA,MAAM,uCAAuC,mHAAA,CAAA,KAAE,CAAC,UAAU,CACxD;IACE,MAAM;IACN,aAAa;IACb,cAAc;AAChB,GACA,OAAM;IACJ,MAAM,EAAC,MAAM,EAAC,GAAG,MAAM,OAAO;IAC9B,OAAO;AACT;;;IAhCoB;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 378, "column": 0}, "map": {"version":3,"sources":["file:///D:/h2skill/Manas_Mitra_Chatbot/src/ai/flows/contextual-resource-recommendation.ts"],"sourcesContent":["'use server';\r\n/**\r\n * @fileOverview Provides contextual recommendations for wellness resources based on user check-in data.\r\n *\r\n * - contextualResourceRecommendation - A function that generates resource recommendations.\r\n * - ContextualResourceRecommendationInput - The input type for the contextualResourceRecommendation function.\r\n * - ContextualResourceRecommendationOutput - The return type for the contextualResourceRecommendation function.\r\n */\r\n\r\nimport {ai} from '@/ai/genkit';\r\nimport {z} from 'genkit';\r\n\r\nconst ContextualResourceRecommendationInputSchema = z.object({\r\n  checkInData: z\r\n    .string()\r\n    .describe(\r\n      'A string containing the youth\\'s check-in data, including mood and feelings.'\r\n    ),\r\n});\r\nexport type ContextualResourceRecommendationInput = z.infer<\r\n  typeof ContextualResourceRecommendationInputSchema\r\n>;\r\n\r\nconst ContextualResourceRecommendationOutputSchema = z.object({\r\n  resourceRecommendation: z.string().describe('A recommendation for a relevant wellness resource.'),\r\n});\r\nexport type ContextualResourceRecommendationOutput = z.infer<\r\n  typeof ContextualResourceRecommendationOutputSchema\r\n>;\r\n\r\nexport async function contextualResourceRecommendation(\r\n  input: ContextualResourceRecommendationInput\r\n): Promise<ContextualResourceRecommendationOutput> {\r\n  return contextualResourceRecommendationFlow(input);\r\n}\r\n\r\nconst prompt = ai.definePrompt({\r\n  name: 'contextualResourceRecommendationPrompt',\r\n  input: {schema: ContextualResourceRecommendationInputSchema},\r\n  output: {schema: ContextualResourceRecommendationOutputSchema},\r\n  prompt: `Based on the youth's check-in data: {{{checkInData}}}, recommend a relevant wellness resource and explain why it would be helpful.`,\r\n});\r\n\r\nconst contextualResourceRecommendationFlow = ai.defineFlow(\r\n  {\r\n    name: 'contextualResourceRecommendationFlow',\r\n    inputSchema: ContextualResourceRecommendationInputSchema,\r\n    outputSchema: ContextualResourceRecommendationOutputSchema,\r\n  },\r\n  async input => {\r\n    const {output} = await prompt(input);\r\n    return output!;\r\n  }\r\n);\r\n"],"names":[],"mappings":";;;;;AACA;;;;;;CAMC,GAED;AACA;AAAA;;;;;;AAEA,MAAM,8CAA8C,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAC3D,aAAa,uIAAA,CAAA,IAAC,CACX,MAAM,GACN,QAAQ,CACP;AAEN;AAKA,MAAM,+CAA+C,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAC5D,wBAAwB,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;AAC9C;AAKO,eAAe,iCACpB,KAA4C;IAE5C,OAAO,qCAAqC;AAC9C;AAEA,MAAM,SAAS,mHAAA,CAAA,KAAE,CAAC,YAAY,CAAC;IAC7B,MAAM;IACN,OAAO;QAAC,QAAQ;IAA2C;IAC3D,QAAQ;QAAC,QAAQ;IAA4C;IAC7D,QAAQ,CAAC,kIAAkI,CAAC;AAC9I;AAEA,MAAM,uCAAuC,mHAAA,CAAA,KAAE,CAAC,UAAU,CACxD;IACE,MAAM;IACN,aAAa;IACb,cAAc;AAChB,GACA,OAAM;IACJ,MAAM,EAAC,MAAM,EAAC,GAAG,MAAM,OAAO;IAC9B,OAAO;AACT;;;IAtBoB;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 435, "column": 0}, "map": {"version":3,"sources":["file:///D:/h2skill/Manas_Mitra_Chatbot/src/lib/actions.ts"],"sourcesContent":["'use server';\r\n\r\nimport {\r\n  generateAffirmation,\r\n  type GenerateAffirmationInput,\r\n} from '@/ai/flows/daily-affirmations';\r\nimport {\r\n  empatheticResponseToDailyCheckin,\r\n  type EmpatheticResponseToDailyCheckinInput,\r\n} from '@/ai/flows/empathetic-response-to-daily-checkin';\r\nimport {\r\n  contextualResourceRecommendation\r\n} from '@/ai/flows/contextual-resource-recommendation';\r\n\r\nexport async function getAffirmation(input: GenerateAffirmationInput) {\r\n  const { affirmation } = await generateAffirmation(input);\r\n  return affirmation;\r\n}\r\n\r\nexport async function getCheckInResponse(\r\n  input: EmpatheticResponseToDailyCheckinInput & { checkInData: string }\r\n) {\r\n  const { checkInData, ...empatheticInput } = input;\r\n  const [empatheticResponse, resourceRecommendation] = await Promise.all([\r\n    empatheticResponseToDailyCheckin(empatheticInput),\r\n    contextualResourceRecommendation({ checkInData }),\r\n  ]);\r\n  return {\r\n    response: empatheticResponse.response,\r\n    recommendation: resourceRecommendation.resourceRecommendation,\r\n  };\r\n}\r\n"],"names":[],"mappings":";;;;;;AAEA;AAIA;AAIA;;;;;;;AAIO,eAAe,eAAe,KAA+B;IAClE,MAAM,EAAE,WAAW,EAAE,GAAG,MAAM,CAAA,GAAA,2IAAA,CAAA,sBAAmB,AAAD,EAAE;IAClD,OAAO;AACT;AAEO,eAAe,mBACpB,KAAsE;IAEtE,MAAM,EAAE,WAAW,EAAE,GAAG,iBAAiB,GAAG;IAC5C,MAAM,CAAC,oBAAoB,uBAAuB,GAAG,MAAM,QAAQ,GAAG,CAAC;QACrE,CAAA,GAAA,sKAAA,CAAA,mCAAgC,AAAD,EAAE;QACjC,CAAA,GAAA,8JAAA,CAAA,mCAAgC,AAAD,EAAE;YAAE;QAAY;KAChD;IACD,OAAO;QACL,UAAU,mBAAmB,QAAQ;QACrC,gBAAgB,uBAAuB,sBAAsB;IAC/D;AACF;;;IAjBsB;IAKA;;AALA,+OAAA;AAKA,+OAAA","debugId":null}},
    {"offset": {"line": 480, "column": 0}, "map": {"version":3,"sources":["file:///D:/h2skill/Manas_Mitra_Chatbot/.next-internal/server/app/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {getAffirmation as '40f731ace3670e79b7891149cc31de4bb720ba27eb'} from 'ACTIONS_MODULE0'\n"],"names":[],"mappings":";AAAA","debugId":null}},
    {"offset": {"line": 532, "column": 0}, "map": {"version":3,"sources":["file:///D:/h2skill/Manas_Mitra_Chatbot/src/components/dashboard/welcome-header.tsx"],"sourcesContent":["export function WelcomeHeader() {\r\n  return (\r\n    <div>\r\n      <h1 className=\"text-3xl md:text-4xl font-bold font-headline\">Welcome back,</h1>\r\n      <p className=\"text-lg text-muted-foreground\">It's a new day to focus on your well-being.</p>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;;AAAO,SAAS;IACd,qBACE,8OAAC;;0BACC,8OAAC;gBAAG,WAAU;0BAA+C;;;;;;0BAC7D,8OAAC;gBAAE,WAAU;0BAAgC;;;;;;;;;;;;AAGnD","debugId":null}},
    {"offset": {"line": 569, "column": 0}, "map": {"version":3,"sources":["file:///D:/h2skill/Manas_Mitra_Chatbot/src/components/dashboard/affirmation-card.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const AffirmationCard = registerClientReference(\n    function() { throw new Error(\"Attempted to call AffirmationCard() from the server but AffirmationCard is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/dashboard/affirmation-card.tsx <module evaluation>\",\n    \"AffirmationCard\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,kBAAkB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjD;IAAa,MAAM,IAAI,MAAM;AAA8O,GAC3Q,+EACA","debugId":null}},
    {"offset": {"line": 583, "column": 0}, "map": {"version":3,"sources":["file:///D:/h2skill/Manas_Mitra_Chatbot/src/components/dashboard/affirmation-card.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const AffirmationCard = registerClientReference(\n    function() { throw new Error(\"Attempted to call AffirmationCard() from the server but AffirmationCard is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/dashboard/affirmation-card.tsx\",\n    \"AffirmationCard\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,kBAAkB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjD;IAAa,MAAM,IAAI,MAAM;AAA8O,GAC3Q,2DACA","debugId":null}},
    {"offset": {"line": 597, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 607, "column": 0}, "map": {"version":3,"sources":["file:///D:/h2skill/Manas_Mitra_Chatbot/src/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\r\nimport { twMerge } from \"tailwind-merge\"\r\n\r\nexport function cn(...inputs: ClassValue[]) {\r\n  return twMerge(clsx(inputs))\r\n}\r\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,qIAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 623, "column": 0}, "map": {"version":3,"sources":["file:///D:/h2skill/Manas_Mitra_Chatbot/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\r\nimport { Slot } from \"@radix-ui/react-slot\"\r\nimport { cva, type VariantProps } from \"class-variance-authority\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst buttonVariants = cva(\r\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\r\n        destructive:\r\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\r\n        outline:\r\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\r\n        secondary:\r\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\r\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\r\n        link: \"text-primary underline-offset-4 hover:underline\",\r\n      },\r\n      size: {\r\n        default: \"h-10 px-4 py-2\",\r\n        sm: \"h-9 rounded-md px-3\",\r\n        lg: \"h-11 rounded-md px-8\",\r\n        icon: \"h-10 w-10\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: \"default\",\r\n      size: \"default\",\r\n    },\r\n  }\r\n)\r\n\r\nexport interface ButtonProps\r\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\r\n    VariantProps<typeof buttonVariants> {\r\n  asChild?: boolean\r\n}\r\n\r\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\r\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\r\n    const Comp = asChild ? Slot : \"button\"\r\n    return (\r\n      <Comp\r\n        className={cn(buttonVariants({ variant, size, className }))}\r\n        ref={ref}\r\n        {...props}\r\n      />\r\n    )\r\n  }\r\n)\r\nButton.displayName = \"Button\"\r\n\r\nexport { Button, buttonVariants }\r\n"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AAEA;;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACvB,4VACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAC5B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxD,MAAM,OAAO,UAAU,gKAAA,CAAA,OAAI,GAAG;IAC9B,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,OAAO,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 683, "column": 0}, "map": {"version":3,"sources":["file:///D:/h2skill/Manas_Mitra_Chatbot/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Card = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\r\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nCard.displayName = \"Card\"\r\n\r\nconst CardHeader = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\r\n    {...props}\r\n  />\r\n))\r\nCardHeader.displayName = \"CardHeader\"\r\n\r\nconst CardTitle = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\r\n      \"text-2xl font-semibold leading-none tracking-tight\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nCardTitle.displayName = \"CardTitle\"\r\n\r\nconst CardDescription = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\"text-sm text-muted-foreground\", className)}\r\n    {...props}\r\n  />\r\n))\r\nCardDescription.displayName = \"CardDescription\"\r\n\r\nconst CardContent = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\r\n))\r\nCardContent.displayName = \"CardContent\"\r\n\r\nconst CardFooter = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\"flex items-center p-6 pt-0\", className)}\r\n    {...props}\r\n  />\r\n))\r\nCardFooter.displayName = \"CardFooter\"\r\n\r\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\r\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 764, "column": 0}, "map": {"version":3,"sources":["file:///D:/h2skill/Manas_Mitra_Chatbot/src/app/page.tsx"],"sourcesContent":["import { WelcomeHeader } from '@/components/dashboard/welcome-header';\r\nimport { AffirmationCard } from '@/components/dashboard/affirmation-card';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Card, CardContent } from '@/components/ui/card';\r\nimport { ArrowRight, BookHeart, Brain, LineChart } from 'lucide-react';\r\nimport Link from 'next/link';\r\n\r\nexport default function Home() {\r\n  return (\r\n    <div className=\"flex flex-col gap-8 p-4 md:p-8\">\r\n      <WelcomeHeader />\r\n      <div className=\"grid gap-8 md:grid-cols-2\">\r\n        <AffirmationCard />\r\n        <Card className=\"flex flex-col items-center justify-center p-8 text-center\">\r\n            <h3 className=\"text-2xl font-bold mb-4 font-headline\">How are you feeling today?</h3>\r\n            <p className=\"mb-6 text-muted-foreground\">Take a moment to check in with yourself. It only takes a minute.</p>\r\n            <Button asChild size=\"lg\">\r\n                <Link href=\"/check-in\">\r\n                    Start Daily Check-in <ArrowRight />\r\n                </Link>\r\n            </Button>\r\n        </Card>\r\n      </div>\r\n      <div className=\"grid gap-8 md:grid-cols-3\">\r\n        <Card>\r\n            <CardContent className=\"p-6 flex items-center gap-6\">\r\n                <div className=\"p-3 bg-accent/20 rounded-lg text-accent-foreground\"><LineChart className=\"w-8 h-8\"/></div>\r\n                <div>\r\n                    <h3 className=\"text-lg font-bold mb-1 font-headline\">Track Your Progress</h3>\r\n                    <p className=\"text-sm text-muted-foreground mb-4\">See your mood trends and celebrate your journey.</p>\r\n                    <Button variant=\"outline\" asChild>\r\n                        <Link href=\"/progress\">View Progress <ArrowRight/></Link>\r\n                    </Button>\r\n                </div>\r\n            </CardContent>\r\n        </Card>\r\n        <Card>\r\n            <CardContent className=\"p-6 flex items-center gap-6\">\r\n                <div className=\"p-3 bg-primary/20 rounded-lg text-primary\"><Brain className=\"w-8 h-8\"/></div>\r\n                <div>\r\n                    <h3 className=\"text-lg font-bold mb-1 font-headline\">Mindfulness</h3>\r\n                    <p className=\"text-sm text-muted-foreground mb-4\">Guided breathing, meditation, and mindful moments.</p>\r\n                    <Button variant=\"outline\" asChild>\r\n                        <Link href=\"/mindfulness\">Start Session <ArrowRight/></Link>\r\n                    </Button>\r\n                </div>\r\n            </CardContent>\r\n        </Card>\r\n        <Card>\r\n            <CardContent className=\"p-6 flex items-center gap-6\">\r\n                <div className=\"p-3 bg-secondary rounded-lg text-secondary-foreground\"><BookHeart className=\"w-8 h-8\"/></div>\r\n                <div>\r\n                    <h3 className=\"text-lg font-bold mb-1 font-headline\">Explore Resources</h3>\r\n                    <p className=\"text-sm text-muted-foreground mb-4\">Find articles, exercises, and support tools.</p>\r\n                    <Button variant=\"outline\" asChild>\r\n                        <Link href=\"/resources\">Browse Resources <ArrowRight/></Link>\r\n                    </Button>\r\n                </div>\r\n            </CardContent>\r\n        </Card>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;;;;;;;;AAEe,SAAS;IACtB,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC,oJAAA,CAAA,gBAAa;;;;;0BACd,8OAAC;gBAAI,WAAU;;kCACb,8OAAC,sJAAA,CAAA,kBAAe;;;;;kCAChB,8OAAC,gIAAA,CAAA,OAAI;wBAAC,WAAU;;0CACZ,8OAAC;gCAAG,WAAU;0CAAwC;;;;;;0CACtD,8OAAC;gCAAE,WAAU;0CAA6B;;;;;;0CAC1C,8OAAC,kIAAA,CAAA,SAAM;gCAAC,OAAO;gCAAC,MAAK;0CACjB,cAAA,8OAAC,4JAAA,CAAA,UAAI;oCAAC,MAAK;;wCAAY;sDACE,8OAAC,kNAAA,CAAA,aAAU;;;;;;;;;;;;;;;;;;;;;;;;;;;;0BAK9C,8OAAC;gBAAI,WAAU;;kCACb,8OAAC,gIAAA,CAAA,OAAI;kCACD,cAAA,8OAAC,gIAAA,CAAA,cAAW;4BAAC,WAAU;;8CACnB,8OAAC;oCAAI,WAAU;8CAAqD,cAAA,8OAAC,gNAAA,CAAA,YAAS;wCAAC,WAAU;;;;;;;;;;;8CACzF,8OAAC;;sDACG,8OAAC;4CAAG,WAAU;sDAAuC;;;;;;sDACrD,8OAAC;4CAAE,WAAU;sDAAqC;;;;;;sDAClD,8OAAC,kIAAA,CAAA,SAAM;4CAAC,SAAQ;4CAAU,OAAO;sDAC7B,cAAA,8OAAC,4JAAA,CAAA,UAAI;gDAAC,MAAK;;oDAAY;kEAAc,8OAAC,kNAAA,CAAA,aAAU;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;kCAKhE,8OAAC,gIAAA,CAAA,OAAI;kCACD,cAAA,8OAAC,gIAAA,CAAA,cAAW;4BAAC,WAAU;;8CACnB,8OAAC;oCAAI,WAAU;8CAA4C,cAAA,8OAAC,oMAAA,CAAA,QAAK;wCAAC,WAAU;;;;;;;;;;;8CAC5E,8OAAC;;sDACG,8OAAC;4CAAG,WAAU;sDAAuC;;;;;;sDACrD,8OAAC;4CAAE,WAAU;sDAAqC;;;;;;sDAClD,8OAAC,kIAAA,CAAA,SAAM;4CAAC,SAAQ;4CAAU,OAAO;sDAC7B,cAAA,8OAAC,4JAAA,CAAA,UAAI;gDAAC,MAAK;;oDAAe;kEAAc,8OAAC,kNAAA,CAAA,aAAU;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;kCAKnE,8OAAC,gIAAA,CAAA,OAAI;kCACD,cAAA,8OAAC,gIAAA,CAAA,cAAW;4BAAC,WAAU;;8CACnB,8OAAC;oCAAI,WAAU;8CAAwD,cAAA,8OAAC,gNAAA,CAAA,YAAS;wCAAC,WAAU;;;;;;;;;;;8CAC5F,8OAAC;;sDACG,8OAAC;4CAAG,WAAU;sDAAuC;;;;;;sDACrD,8OAAC;4CAAE,WAAU;sDAAqC;;;;;;sDAClD,8OAAC,kIAAA,CAAA,SAAM;4CAAC,SAAQ;4CAAU,OAAO;sDAC7B,cAAA,8OAAC,4JAAA,CAAA,UAAI;gDAAC,MAAK;;oDAAa;kEAAiB,8OAAC,kNAAA,CAAA,aAAU;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQ5E","debugId":null}}]
}