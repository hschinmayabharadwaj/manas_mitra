{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 223, "column": 0}, "map": {"version":3,"sources":["file:///D:/h2skill/Manas_Mitra_Chatbot/src/ai/flows/personalized-mindfulness-session.ts"],"sourcesContent":["'use server';\r\n\r\n/**\r\n * @fileOverview Generates personalized mindfulness sessions based on user preferences and current state.\r\n *\r\n * - generateMindfulnessSession - A function that creates customized mindfulness content.\r\n * - PersonalizedMindfulnessSessionInput - The input type for the generateMindfulnessSession function.\r\n * - PersonalizedMindfulnessSessionOutput - The return type for the generateMindfulnessSession function.\r\n */\r\n\r\nimport { ai, z } from 'genkit';\r\n\r\nconst PersonalizedMindfulnessSessionInputSchema = z.object({\r\n  mood: z\r\n    .string()\r\n    .describe('The current mood of the user (e.g., anxious, stressed, calm, sad, excited)'),\r\n  sessionType: z\r\n    .enum(['breathing', 'meditation', 'body-scan', 'mindful-moment'])\r\n    .describe('The type of mindfulness session requested'),\r\n  duration: z\r\n    .number()\r\n    .min(1)\r\n    .max(30)\r\n    .describe('Duration of the session in minutes'),\r\n  experience: z\r\n    .enum(['beginner', 'intermediate', 'advanced'])\r\n    .optional()\r\n    .describe('User experience level with mindfulness practices'),\r\n});\r\nexport type PersonalizedMindfulnessSessionInput = z.infer<\r\n  typeof PersonalizedMindfulnessSessionInputSchema\r\n>;\r\n\r\nconst PersonalizedMindfulnessSessionOutputSchema = z.object({\r\n  title: z.string().describe('A personalized title for the mindfulness session'),\r\n  description: z.string().describe('A brief description of what the session will help with'),\r\n  instructions: z.array(z.string()).describe('Step-by-step instructions for the session'),\r\n  guidance: z.array(z.object({\r\n    timeMarker: z.string().describe('When to say this during the session (e.g., \"0:30\", \"2:00\")'),\r\n    text: z.string().describe('Calming guidance text to read at this time'),\r\n  })).describe('Timed guidance phrases for the session'),\r\n  benefits: z.array(z.string()).describe('Expected benefits of completing this session'),\r\n});\r\nexport type PersonalizedMindfulnessSessionOutput = z.infer<\r\n  typeof PersonalizedMindfulnessSessionOutputSchema\r\n>;\r\n\r\nexport async function generateMindfulnessSession(\r\n  input: PersonalizedMindfulnessSessionInput\r\n): Promise<PersonalizedMindfulnessSessionOutput> {\r\n  return personalizedMindfulnessSessionFlow(input);\r\n}\r\n\r\nconst prompt = ai.definePrompt({\r\n  name: 'personalizedMindfulnessSessionPrompt',\r\n  input: {schema: PersonalizedMindfulnessSessionInputSchema},\r\n  output: {schema: PersonalizedMindfulnessSessionOutputSchema},\r\n  prompt: `You are a skilled mindfulness instructor creating a personalized session for a youth experiencing {{{mood}}} feelings.\r\n\r\nCreate a {{{duration}}}-minute {{{sessionType}}} session that is appropriate for someone with {{#if experience}}{{{experience}}}{{else}}beginner{{/if}} experience level.\r\n\r\nGuidelines:\r\n- Use gentle, encouraging language appropriate for young people\r\n- Tailor the session to help with the specific mood: {{{mood}}}\r\n- Create timed guidance that flows naturally throughout the {{{duration}}} minutes\r\n- For breathing exercises, include specific breathing patterns and counts\r\n- For meditation, focus on simple techniques like breath awareness or loving-kindness\r\n- For body-scan, guide systematically through different body parts\r\n- For mindful-moment, create present-moment awareness activities\r\n\r\nThe session should feel supportive, non-judgmental, and accessible to youth who may be new to mindfulness.`,\r\n});\r\n\r\nconst personalizedMindfulnessSessionFlow = ai.defineFlow(\r\n  {\r\n    name: 'personalizedMindfulnessSessionFlow',\r\n    inputSchema: PersonalizedMindfulnessSessionInputSchema,\r\n    outputSchema: PersonalizedMindfulnessSessionOutputSchema,\r\n  },\r\n  async input => {\r\n    const {output} = await prompt(input);\r\n    return output!;\r\n  }\r\n);"],"names":[],"mappings":";;;;;AAEA;;;;;;CAMC,GAED;AAAA;;;;;AAEA,MAAM,4CAA4C,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACzD,MAAM,uIAAA,CAAA,IAAC,CACJ,MAAM,GACN,QAAQ,CAAC;IACZ,aAAa,uIAAA,CAAA,IAAC,CACX,IAAI,CAAC;QAAC;QAAa;QAAc;QAAa;KAAiB,EAC/D,QAAQ,CAAC;IACZ,UAAU,uIAAA,CAAA,IAAC,CACR,MAAM,GACN,GAAG,CAAC,GACJ,GAAG,CAAC,IACJ,QAAQ,CAAC;IACZ,YAAY,uIAAA,CAAA,IAAC,CACV,IAAI,CAAC;QAAC;QAAY;QAAgB;KAAW,EAC7C,QAAQ,GACR,QAAQ,CAAC;AACd;AAKA,MAAM,6CAA6C,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAC1D,OAAO,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IAC3B,aAAa,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IACjC,cAAc,uIAAA,CAAA,IAAC,CAAC,KAAK,CAAC,uIAAA,CAAA,IAAC,CAAC,MAAM,IAAI,QAAQ,CAAC;IAC3C,UAAU,uIAAA,CAAA,IAAC,CAAC,KAAK,CAAC,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;QACzB,YAAY,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;QAChC,MAAM,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IAC5B,IAAI,QAAQ,CAAC;IACb,UAAU,uIAAA,CAAA,IAAC,CAAC,KAAK,CAAC,uIAAA,CAAA,IAAC,CAAC,MAAM,IAAI,QAAQ,CAAC;AACzC;AAKO,eAAe,2BACpB,KAA0C;IAE1C,OAAO,mCAAmC;AAC5C;AAEA,MAAM,SAAS,uIAAA,CAAA,KAAE,CAAC,YAAY,CAAC;IAC7B,MAAM;IACN,OAAO;QAAC,QAAQ;IAAyC;IACzD,QAAQ;QAAC,QAAQ;IAA0C;IAC3D,QAAQ,CAAC;;;;;;;;;;;;;0GAa+F,CAAC;AAC3G;AAEA,MAAM,qCAAqC,uIAAA,CAAA,KAAE,CAAC,UAAU,CACtD;IACE,MAAM;IACN,aAAa;IACb,cAAc;AAChB,GACA,OAAM;IACJ,MAAM,EAAC,MAAM,EAAC,GAAG,MAAM,OAAO;IAC9B,OAAO;AACT;;;IAnCoB;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 310, "column": 0}, "map": {"version":3,"sources":["file:///D:/h2skill/Manas_Mitra_Chatbot/.next-internal/server/app/mindfulness/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {generateMindfulnessSession as '400af421ccb2af4bf1586124551892a30f459e6d63'} from 'ACTIONS_MODULE0'\n"],"names":[],"mappings":";AAAA","debugId":null}},
    {"offset": {"line": 362, "column": 0}, "map": {"version":3,"sources":["file:///D:/h2skill/Manas_Mitra_Chatbot/src/app/mindfulness/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/mindfulness/page.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/mindfulness/page.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAgS,GAC7T,8DACA","debugId":null}},
    {"offset": {"line": 376, "column": 0}, "map": {"version":3,"sources":["file:///D:/h2skill/Manas_Mitra_Chatbot/src/app/mindfulness/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/mindfulness/page.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/mindfulness/page.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA4Q,GACzS,0CACA","debugId":null}},
    {"offset": {"line": 390, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}}]
}