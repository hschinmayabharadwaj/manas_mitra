{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///D:/h2skill/Manas_Mitra_Chatbot/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Card = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\r\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nCard.displayName = \"Card\"\r\n\r\nconst CardHeader = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\r\n    {...props}\r\n  />\r\n))\r\nCardHeader.displayName = \"CardHeader\"\r\n\r\nconst CardTitle = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\r\n      \"text-2xl font-semibold leading-none tracking-tight\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nCardTitle.displayName = \"CardTitle\"\r\n\r\nconst CardDescription = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\"text-sm text-muted-foreground\", className)}\r\n    {...props}\r\n  />\r\n))\r\nCardDescription.displayName = \"CardDescription\"\r\n\r\nconst CardContent = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\r\n))\r\nCardContent.displayName = \"CardContent\"\r\n\r\nconst CardFooter = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\"flex items-center p-6 pt-0\", className)}\r\n    {...props}\r\n  />\r\n))\r\nCardFooter.displayName = \"CardFooter\"\r\n\r\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\r\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 88, "column": 0}, "map": {"version":3,"sources":["file:///D:/h2skill/Manas_Mitra_Chatbot/src/components/forum/post-card.tsx"],"sourcesContent":["import { Card, CardHeader, CardTitle, CardContent, CardFooter } from \"@/components/ui/card\";\r\nimport { MessageSquare } from \"lucide-react\";\r\nimport { type Post } from \"@/lib/types\";\r\n\r\ntype PostCardProps = {\r\n  post: Post;\r\n};\r\n\r\nexport function PostCard({ post }: PostCardProps) {\r\n  return (\r\n    <Card className=\"hover:shadow-md transition-shadow\">\r\n      <CardHeader>\r\n        <CardTitle>{post.title}</CardTitle>\r\n        <div className=\"text-sm text-muted-foreground\">\r\n          <span>By {post.author}</span> &bull; <span>{post.timestamp}</span>\r\n        </div>\r\n      </CardHeader>\r\n      <CardContent>\r\n        <p className=\"line-clamp-3\">{post.content}</p>\r\n      </CardContent>\r\n      <CardFooter>\r\n        <div className=\"flex items-center gap-2 text-sm text-muted-foreground\">\r\n          <MessageSquare className=\"h-4 w-4\" />\r\n          <span>{post.comments} comments</span>\r\n        </div>\r\n      </CardFooter>\r\n    </Card>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AAAA;AACA;;;;AAOO,SAAS,SAAS,EAAE,IAAI,EAAiB;IAC9C,qBACE,8OAAC,gIAAA,CAAA,OAAI;QAAC,WAAU;;0BACd,8OAAC,gIAAA,CAAA,aAAU;;kCACT,8OAAC,gIAAA,CAAA,YAAS;kCAAE,KAAK,KAAK;;;;;;kCACtB,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;;oCAAK;oCAAI,KAAK,MAAM;;;;;;;4BAAQ;0CAAQ,8OAAC;0CAAM,KAAK,SAAS;;;;;;;;;;;;;;;;;;0BAG9D,8OAAC,gIAAA,CAAA,cAAW;0BACV,cAAA,8OAAC;oBAAE,WAAU;8BAAgB,KAAK,OAAO;;;;;;;;;;;0BAE3C,8OAAC,gIAAA,CAAA,aAAU;0BACT,cAAA,8OAAC;oBAAI,WAAU;;sCACb,8OAAC,wNAAA,CAAA,gBAAa;4BAAC,WAAU;;;;;;sCACzB,8OAAC;;gCAAM,KAAK,QAAQ;gCAAC;;;;;;;;;;;;;;;;;;;;;;;;AAK/B","debugId":null}},
    {"offset": {"line": 202, "column": 0}, "map": {"version":3,"sources":["file:///D:/h2skill/Manas_Mitra_Chatbot/src/app/forum/page.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { PostCard } from \"@/components/forum/post-card\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport React, { useState } from \"react\";\r\n\"use client\";\r\n\r\nconst mockPosts: Post[] = [\r\n  {\r\n    id: \"1\",\r\n    author: \"Anonymous Panda\",\r\n    title: \"Feeling overwhelmed with school work\",\r\n    content: \"Lately, the pressure from school has been too much. I feel like I can't keep up and it's making me really anxious. Does anyone else feel this way? How do you cope?\",\r\n    comments: 5,\r\n    timestamp: \"2 hours ago\",\r\n  },\r\n  {\r\n    id: \"2\",\r\n    author: \"Anonymous Capybara\",\r\n    title: \"A small win today!\",\r\n    content: \"I've been struggling to get out of bed, but today I managed to go for a short walk and it felt really good. Just wanted to share a small moment of positivity.\",\r\n    comments: 12,\r\n    timestamp: \"8 hours ago\",\r\n  },\r\n  {\r\n    id: \"3\",\r\n    author: \"Anonymous Fox\",\r\n    title: \"How to deal with feeling lonely?\",\r\n    content: \"I moved to a new city and I'm finding it hard to make friends. It gets really lonely sometimes. Any advice on meeting new people or dealing with loneliness?\",\r\n    comments: 8,\r\n    timestamp: \"1 day ago\",\r\n  },\r\n];\r\n\r\n\r\nexport default function ForumPage() {\r\n    return (\r\n        <div className=\"p-4 md:p-8\">\r\n            <div className=\"flex justify-between items-center mb-8\">\r\n                <div>\r\n                    <h1 className=\"text-3xl font-bold font-headline\">Support Forum</h1>\r\n                    <p className=\"text-lg text-muted-foreground\">A safe and anonymous space to share and connect.</p>\r\n                </div>\r\n                <Button>\r\n                    <PenSquare className=\"mr-2 h-4 w-4\" />\r\n                    Create Post\r\n                </Button>\r\n            </div>\r\n            <div className=\"space-y-6\">\r\n                {mockPosts.map((post) => (\r\n                    <PostCard key={post.id} post={post} />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\n// PostComposer.tsx\r\n// A simple, single-file React + TypeScript component that lets a user enter their name\r\n// and write a post. Typing `@me` inside the post will render the entered name in the\r\n// live preview and on submit.\r\n\r\n// Usage: import PostComposer from './PostComposer'; and render <PostComposer />\r\n\r\nexport default function PostComposer() {\r\n  const [name, setName] = useState<string>(\"\");\r\n  const [post, setPost] = useState<string>(\"\");\r\n  const [submittedPosts, setSubmittedPosts] = useState<Array<{ id: number; author: string; content: string }>>([]);\r\n  const maxLength = 1000;\r\n\r\n  function renderWithName(raw: string, displayName: string) {\r\n    // Replace all occurrences of `@me` with the user's name (escaped for safety)\r\n    const safeName = displayName || \"(you)\";\r\n    return raw.split(\"@me\").map((part, idx) => (\r\n      // We'll return React nodes to allow simple highlighting of the name\r\n      <React.Fragment key={idx}>\r\n        {part}\r\n        {idx < raw.split(\"@me\").length - 1 && (\r\n          <span className=\"font-semibold text-indigo-700\">{safeName}</span>\r\n        )}\r\n      </React.Fragment>\r\n    ));\r\n  }\r\n\r\n  function handleSubmit(e?: React.FormEvent) {\r\n    e?.preventDefault();\r\n    if (!post.trim()) return;\r\n    const finalContent = post.replace(/@me/g, name || \"(you)\");\r\n    const newPost = {\r\n      id: Date.now(),\r\n      author: name || \"Anonymous\",\r\n      content: finalContent,\r\n    };\r\n    setSubmittedPosts((s) => [newPost, ...s]);\r\n    setPost(\"\");\r\n  }\r\n\r\n  return (\r\n    <div className=\"max-w-3xl mx-auto p-4\">\r\n      <div className=\"bg-white shadow-md rounded-2xl p-6\">\r\n        <h2 className=\"text-2xl font-bold mb-4\">Write a post</h2>\r\n\r\n        <label className=\"block mb-2\">\r\n          <div className=\"text-sm text-gray-600\">Your name</div>\r\n          <input\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n            placeholder=\"Enter your name\"\r\n            className=\"mt-1 w-full rounded-lg border p-2 focus:outline-none focus:ring-2 focus:ring-indigo-300\"\r\n            aria-label=\"Your name\"\r\n          />\r\n        </label>\r\n\r\n        <form onSubmit={handleSubmit} className=\"mt-4\">\r\n          <label className=\"block mb-2\">\r\n            <div className=\"text-sm text-gray-600\">Post (use <code>@me</code> to mention your name)</div>\r\n            <textarea\r\n              value={post}\r\n              onChange={(e) => setPost(e.target.value)}\r\n              placeholder=\"Write something...\"\r\n              maxLength={maxLength}\r\n              rows={5}\r\n              className=\"mt-1 w-full rounded-lg border p-3 focus:outline-none focus:ring-2 focus:ring-indigo-300\"\r\n              aria-label=\"Post content\"\r\n            />\r\n          </label>\r\n\r\n          <div className=\"flex items-center justify-between mt-2\">\r\n            <div className=\"text-sm text-gray-500\">{post.length}/{maxLength} characters</div>\r\n            <div className=\"flex gap-2\">\r\n              <button\r\n                type=\"button\"\r\n                onClick={() => {\r\n                  setPost((p) => p + (p ? \"\\n@me\" : \"@me\"));\r\n                }}\r\n                className=\"px-3 py-1 rounded-md border hover:bg-gray-50\"\r\n              >\r\n                Insert @me\r\n              </button>\r\n              <button\r\n                type=\"submit\"\r\n                className=\"px-4 py-1 rounded-md bg-indigo-600 text-white font-medium hover:bg-indigo-700\"\r\n              >\r\n                Post\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n\r\n        <div className=\"mt-6\">\r\n          <h3 className=\"text-lg font-semibold mb-2\">Live preview</h3>\r\n          <div className=\"rounded-md border p-4 bg-gray-50 min-h-[60px]\">\r\n            {post ? (\r\n              <div className=\"prose\">\r\n                <div className=\"text-sm text-gray-600 mb-1\">Author: <span className=\"font-medium\">{name || \"Anonymous\"}</span></div>\r\n                <div>{renderWithName(post, name)}</div>\r\n              </div>\r\n            ) : (\r\n              <div className=\"text-sm text-gray-400\">Your post preview will appear here.</div>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        {submittedPosts.length > 0 && (\r\n          <div className=\"mt-8\">\r\n            <h3 className=\"text-lg font-semibold mb-3\">Submitted posts</h3>\r\n            <div className=\"space-y-4\">\r\n              {submittedPosts.map((p) => (\r\n                <article key={p.id} className=\"border rounded-lg p-4 bg-white\">\r\n                  <div className=\"text-sm text-gray-600 mb-2\">{p.author}</div>\r\n                  <div className=\"whitespace-pre-wrap\">{p.content}</div>\r\n                </article>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"text-right text-xs text-gray-400 mt-3\">Tip: type <code>@me</code> in the post to mention yourself in the preview.</div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}}]
}