{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///D:/h2skill/Manas_Mitra_Chatbot/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Card = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\r\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nCard.displayName = \"Card\"\r\n\r\nconst CardHeader = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\r\n    {...props}\r\n  />\r\n))\r\nCardHeader.displayName = \"CardHeader\"\r\n\r\nconst CardTitle = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\r\n      \"text-2xl font-semibold leading-none tracking-tight\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nCardTitle.displayName = \"CardTitle\"\r\n\r\nconst CardDescription = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\"text-sm text-muted-foreground\", className)}\r\n    {...props}\r\n  />\r\n))\r\nCardDescription.displayName = \"CardDescription\"\r\n\r\nconst CardContent = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\r\n))\r\nCardContent.displayName = \"CardContent\"\r\n\r\nconst CardFooter = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\"flex items-center p-6 pt-0\", className)}\r\n    {...props}\r\n  />\r\n))\r\nCardFooter.displayName = \"CardFooter\"\r\n\r\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\r\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 88, "column": 0}, "map": {"version":3,"sources":["file:///D:/h2skill/Manas_Mitra_Chatbot/src/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\r\nimport { cva, type VariantProps } from \"class-variance-authority\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst badgeVariants = cva(\r\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default:\r\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\r\n        secondary:\r\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\r\n        destructive:\r\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\r\n        outline: \"text-foreground\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: \"default\",\r\n    },\r\n  }\r\n)\r\n\r\nexport interface BadgeProps\r\n  extends React.HTMLAttributes<HTMLDivElement>,\r\n    VariantProps<typeof badgeVariants> {}\r\n\r\nfunction Badge({ className, variant, ...props }: BadgeProps) {\r\n  return (\r\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\r\n  )\r\n}\r\n\r\nexport { Badge, badgeVariants }\r\n"],"names":[],"mappings":";;;;;AACA;AAEA;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB,0KACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SAAS;QACX;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAOF,SAAS,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAmB;IACzD,qBACE,8OAAC;QAAI,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QAAa,GAAG,KAAK;;;;;;AAExE","debugId":null}},
    {"offset": {"line": 130, "column": 0}, "map": {"version":3,"sources":["file:///D:/h2skill/Manas_Mitra_Chatbot/src/components/ui/progress.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Progress = React.forwardRef<\r\n  React.ElementRef<typeof ProgressPrimitive.Root>,\r\n  React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root>\r\n>(({ className, value, ...props }, ref) => (\r\n  <ProgressPrimitive.Root\r\n    ref={ref}\r\n    className={cn(\r\n      \"relative h-4 w-full overflow-hidden rounded-full bg-secondary\",\r\n      className\r\n    )}\r\n    {...props}\r\n  >\r\n    <ProgressPrimitive.Indicator\r\n      className=\"h-full w-full flex-1 bg-primary transition-all\"\r\n      style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\r\n    />\r\n  </ProgressPrimitive.Root>\r\n))\r\nProgress.displayName = ProgressPrimitive.Root.displayName\r\n\r\nexport { Progress }\r\n"],"names":[],"mappings":";;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,yBAAW,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG9B,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,GAAG,OAAO,EAAE,oBACjC,8OAAC,oKAAA,CAAA,OAAsB;QACrB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,iEACA;QAED,GAAG,KAAK;kBAET,cAAA,8OAAC,oKAAA,CAAA,YAA2B;YAC1B,WAAU;YACV,OAAO;gBAAE,WAAW,CAAC,YAAY,EAAE,MAAM,CAAC,SAAS,CAAC,EAAE,EAAE,CAAC;YAAC;;;;;;;;;;;AAIhE,SAAS,WAAW,GAAG,oKAAA,CAAA,OAAsB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 169, "column": 0}, "map": {"version":3,"sources":["file:///D:/h2skill/Manas_Mitra_Chatbot/src/ai/flows/personalized-mindfulness-session.ts"],"sourcesContent":["'use server';\r\n\r\n/**\r\n * @fileOverview Generates personalized mindfulness sessions based on user preferences and current state.\r\n *\r\n * - generateMindfulnessSession - A function that creates customized mindfulness content.\r\n * - PersonalizedMindfulnessSessionInput - The input type for the generateMindfulnessSession function.\r\n * - PersonalizedMindfulnessSessionOutput - The return type for the generateMindfulnessSession function.\r\n */\r\n\r\nimport {ai} from '@/ai/genkit';\r\nimport {z} from 'genkit';\r\n\r\nconst PersonalizedMindfulnessSessionInputSchema = z.object({\r\n  mood: z\r\n    .string()\r\n    .describe('The current mood of the user (e.g., anxious, stressed, calm, sad, excited)'),\r\n  sessionType: z\r\n    .enum(['breathing', 'meditation', 'body-scan', 'mindful-moment'])\r\n    .describe('The type of mindfulness session requested'),\r\n  duration: z\r\n    .number()\r\n    .min(1)\r\n    .max(30)\r\n    .describe('Duration of the session in minutes'),\r\n  experience: z\r\n    .enum(['beginner', 'intermediate', 'advanced'])\r\n    .optional()\r\n    .describe('User experience level with mindfulness practices'),\r\n});\r\nexport type PersonalizedMindfulnessSessionInput = z.infer<\r\n  typeof PersonalizedMindfulnessSessionInputSchema\r\n>;\r\n\r\nconst PersonalizedMindfulnessSessionOutputSchema = z.object({\r\n  title: z.string().describe('A personalized title for the mindfulness session'),\r\n  description: z.string().describe('A brief description of what the session will help with'),\r\n  instructions: z.array(z.string()).describe('Step-by-step instructions for the session'),\r\n  guidance: z.array(z.object({\r\n    timeMarker: z.string().describe('When to say this during the session (e.g., \"0:30\", \"2:00\")'),\r\n    text: z.string().describe('Calming guidance text to read at this time'),\r\n  })).describe('Timed guidance phrases for the session'),\r\n  benefits: z.array(z.string()).describe('Expected benefits of completing this session'),\r\n});\r\nexport type PersonalizedMindfulnessSessionOutput = z.infer<\r\n  typeof PersonalizedMindfulnessSessionOutputSchema\r\n>;\r\n\r\nexport async function generateMindfulnessSession(\r\n  input: PersonalizedMindfulnessSessionInput\r\n): Promise<PersonalizedMindfulnessSessionOutput> {\r\n  return personalizedMindfulnessSessionFlow(input);\r\n}\r\n\r\nconst prompt = ai.definePrompt({\r\n  name: 'personalizedMindfulnessSessionPrompt',\r\n  input: {schema: PersonalizedMindfulnessSessionInputSchema},\r\n  output: {schema: PersonalizedMindfulnessSessionOutputSchema},\r\n  prompt: `You are a skilled mindfulness instructor creating a personalized session for a youth experiencing {{{mood}}} feelings.\r\n\r\nCreate a {{{duration}}}-minute {{{sessionType}}} session that is appropriate for someone with {{#if experience}}{{{experience}}}{{else}}beginner{{/if}} experience level.\r\n\r\nGuidelines:\r\n- Use gentle, encouraging language appropriate for young people\r\n- Tailor the session to help with the specific mood: {{{mood}}}\r\n- Create timed guidance that flows naturally throughout the {{{duration}}} minutes\r\n- For breathing exercises, include specific breathing patterns and counts\r\n- For meditation, focus on simple techniques like breath awareness or loving-kindness\r\n- For body-scan, guide systematically through different body parts\r\n- For mindful-moment, create present-moment awareness activities\r\n\r\nThe session should feel supportive, non-judgmental, and accessible to youth who may be new to mindfulness.`,\r\n});\r\n\r\nconst personalizedMindfulnessSessionFlow = ai.defineFlow(\r\n  {\r\n    name: 'personalizedMindfulnessSessionFlow',\r\n    inputSchema: PersonalizedMindfulnessSessionInputSchema,\r\n    outputSchema: PersonalizedMindfulnessSessionOutputSchema,\r\n  },\r\n  async input => {\r\n    const {output} = await prompt(input);\r\n    return output!;\r\n  }\r\n);"],"names":[],"mappings":";;;;;;IAgDsB,6BAAA,WAAA,GAAA,CAAA,GAAA,sNAAA,CAAA,wBAAA,EAAA,8CAAA,sNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,sNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 182, "column": 0}, "map": {"version":3,"sources":["file:///D:/h2skill/Manas_Mitra_Chatbot/src/hooks/use-mindfulness-session.ts"],"sourcesContent":["'use client';\r\n\r\nimport { useState, useEffect, useCallback, useRef } from 'react';\r\nimport type { SessionProgress } from '@/lib/types';\r\n\r\ninterface UseMindfulnessSessionReturn {\r\n  isPlaying: boolean;\r\n  currentTime: number;\r\n  progress: number;\r\n  startSession: () => void;\r\n  pauseSession: () => void;\r\n  stopSession: () => void;\r\n  resetSession: () => void;\r\n}\r\n\r\nexport function useMindfulnessSession(totalDuration: number): UseMindfulnessSessionReturn {\r\n  const [isPlaying, setIsPlaying] = useState(false);\r\n  const [currentTime, setCurrentTime] = useState(0);\r\n  const intervalRef = useRef<NodeJS.Timeout | null>(null);\r\n  const startTimeRef = useRef<number>(0);\r\n  const pausedTimeRef = useRef<number>(0);\r\n\r\n  const progress = (currentTime / totalDuration) * 100;\r\n\r\n  const startSession = useCallback(() => {\r\n    if (!isPlaying) {\r\n      setIsPlaying(true);\r\n      startTimeRef.current = Date.now() - (pausedTimeRef.current * 1000);\r\n    }\r\n  }, [isPlaying]);\r\n\r\n  const pauseSession = useCallback(() => {\r\n    if (isPlaying) {\r\n      setIsPlaying(false);\r\n      pausedTimeRef.current = currentTime;\r\n      if (intervalRef.current) {\r\n        clearInterval(intervalRef.current);\r\n        intervalRef.current = null;\r\n      }\r\n    }\r\n  }, [isPlaying, currentTime]);\r\n\r\n  const stopSession = useCallback(() => {\r\n    setIsPlaying(false);\r\n    setCurrentTime(0);\r\n    pausedTimeRef.current = 0;\r\n    if (intervalRef.current) {\r\n      clearInterval(intervalRef.current);\r\n      intervalRef.current = null;\r\n    }\r\n  }, []);\r\n\r\n  const resetSession = useCallback(() => {\r\n    stopSession();\r\n  }, [stopSession]);\r\n\r\n  // Timer effect\r\n  useEffect(() => {\r\n    if (isPlaying) {\r\n      intervalRef.current = setInterval(() => {\r\n        const elapsed = Math.floor((Date.now() - startTimeRef.current) / 1000);\r\n        \r\n        if (elapsed >= totalDuration) {\r\n          setCurrentTime(totalDuration);\r\n          setIsPlaying(false);\r\n          if (intervalRef.current) {\r\n            clearInterval(intervalRef.current);\r\n            intervalRef.current = null;\r\n          }\r\n        } else {\r\n          setCurrentTime(elapsed);\r\n        }\r\n      }, 1000);\r\n    } else if (intervalRef.current) {\r\n      clearInterval(intervalRef.current);\r\n      intervalRef.current = null;\r\n    }\r\n\r\n    return () => {\r\n      if (intervalRef.current) {\r\n        clearInterval(intervalRef.current);\r\n        intervalRef.current = null;\r\n      }\r\n    };\r\n  }, [isPlaying, totalDuration]);\r\n\r\n  // Cleanup on unmount\r\n  useEffect(() => {\r\n    return () => {\r\n      if (intervalRef.current) {\r\n        clearInterval(intervalRef.current);\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  return {\r\n    isPlaying,\r\n    currentTime,\r\n    progress,\r\n    startSession,\r\n    pauseSession,\r\n    stopSession,\r\n    resetSession,\r\n  };\r\n}\r\n\r\n// Hook for managing mindfulness session history\r\nexport function useMindfulnessHistory() {\r\n  const [sessionHistory, setSessionHistory] = useState<SessionProgress[]>([]);\r\n\r\n  useEffect(() => {\r\n    const stored = localStorage.getItem('mindfulness-sessions');\r\n    if (stored) {\r\n      try {\r\n        setSessionHistory(JSON.parse(stored));\r\n      } catch {\r\n        // Handle parsing error gracefully\r\n        setSessionHistory([]);\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  const addSession = useCallback((session: Omit<SessionProgress, 'completedAt'>) => {\r\n    const newSession: SessionProgress = {\r\n      ...session,\r\n      completedAt: new Date().toISOString(),\r\n    };\r\n\r\n    setSessionHistory(prev => {\r\n      const updated = [newSession, ...prev].slice(0, 50); // Keep last 50 sessions\r\n      localStorage.setItem('mindfulness-sessions', JSON.stringify(updated));\r\n      return updated;\r\n    });\r\n  }, []);\r\n\r\n  const getSessionStats = useCallback(() => {\r\n    const now = new Date();\r\n    const thisWeek = new Date(now.getTime() - 7 * 24 * 60 * 60 * 1000);\r\n    const thisMonth = new Date(now.getTime() - 30 * 24 * 60 * 60 * 1000);\r\n\r\n    const weekSessions = sessionHistory.filter(\r\n      session => new Date(session.completedAt) >= thisWeek\r\n    );\r\n    const monthSessions = sessionHistory.filter(\r\n      session => new Date(session.completedAt) >= thisMonth\r\n    );\r\n\r\n    const totalMinutes = sessionHistory.reduce((sum, session) => sum + session.duration, 0);\r\n    const weekMinutes = weekSessions.reduce((sum, session) => sum + session.duration, 0);\r\n\r\n    return {\r\n      totalSessions: sessionHistory.length,\r\n      weekSessions: weekSessions.length,\r\n      monthSessions: monthSessions.length,\r\n      totalMinutes,\r\n      weekMinutes,\r\n      favoriteType: getFavoriteSessionType(),\r\n    };\r\n  }, [sessionHistory]);\r\n\r\n  const getFavoriteSessionType = useCallback(() => {\r\n    const typeCounts = sessionHistory.reduce((counts, session) => {\r\n      counts[session.sessionType] = (counts[session.sessionType] || 0) + 1;\r\n      return counts;\r\n    }, {} as Record<string, number>);\r\n\r\n    return Object.entries(typeCounts).reduce(\r\n      (favorite, [type, count]) => \r\n        count > favorite.count ? { type, count } : favorite,\r\n      { type: '', count: 0 }\r\n    ).type;\r\n  }, [sessionHistory]);\r\n\r\n  return {\r\n    sessionHistory,\r\n    addSession,\r\n    getSessionStats,\r\n  };\r\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 352, "column": 0}, "map": {"version":3,"sources":["file:///D:/h2skill/Manas_Mitra_Chatbot/src/components/mindfulness/breathing-visualizer.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { useEffect, useState } from 'react';\r\n\r\ninterface BreathingVisualizerProps {\r\n  isActive: boolean;\r\n  pattern?: {\r\n    inhale: number;\r\n    hold: number;\r\n    exhale: number;\r\n    pause: number;\r\n  };\r\n}\r\n\r\nexport function BreathingVisualizer({ \r\n  isActive, \r\n  pattern = { inhale: 4, hold: 2, exhale: 6, pause: 1 } \r\n}: BreathingVisualizerProps) {\r\n  const [phase, setPhase] = useState<'inhale' | 'hold' | 'exhale' | 'pause'>('inhale');\r\n  const [scale, setScale] = useState(1);\r\n  const [cycleTime, setCycleTime] = useState(0);\r\n\r\n  useEffect(() => {\r\n    if (!isActive) {\r\n      setScale(1);\r\n      setCycleTime(0);\r\n      setPhase('inhale');\r\n      return;\r\n    }\r\n\r\n    const totalCycleTime = pattern.inhale + pattern.hold + pattern.exhale + pattern.pause;\r\n    let animationFrame: number;\r\n    let startTime = Date.now();\r\n\r\n    const animate = () => {\r\n      const elapsed = (Date.now() - startTime) / 1000;\r\n      const currentCycleTime = elapsed % totalCycleTime;\r\n      setCycleTime(currentCycleTime);\r\n\r\n      // Determine current phase\r\n      if (currentCycleTime < pattern.inhale) {\r\n        setPhase('inhale');\r\n        const progress = currentCycleTime / pattern.inhale;\r\n        setScale(1 + progress * 0.8); // Scale from 1 to 1.8\r\n      } else if (currentCycleTime < pattern.inhale + pattern.hold) {\r\n        setPhase('hold');\r\n        setScale(1.8); // Hold at max scale\r\n      } else if (currentCycleTime < pattern.inhale + pattern.hold + pattern.exhale) {\r\n        setPhase('exhale');\r\n        const exhaleStart = pattern.inhale + pattern.hold;\r\n        const progress = (currentCycleTime - exhaleStart) / pattern.exhale;\r\n        setScale(1.8 - progress * 0.8); // Scale from 1.8 back to 1\r\n      } else {\r\n        setPhase('pause');\r\n        setScale(1); // Stay at minimum scale\r\n      }\r\n\r\n      animationFrame = requestAnimationFrame(animate);\r\n    };\r\n\r\n    animationFrame = requestAnimationFrame(animate);\r\n\r\n    return () => {\r\n      if (animationFrame) {\r\n        cancelAnimationFrame(animationFrame);\r\n      }\r\n    };\r\n  }, [isActive, pattern]);\r\n\r\n  const getPhaseText = () => {\r\n    switch (phase) {\r\n      case 'inhale':\r\n        return 'Breathe In';\r\n      case 'hold':\r\n        return 'Hold';\r\n      case 'exhale':\r\n        return 'Breathe Out';\r\n      case 'pause':\r\n        return 'Pause';\r\n      default:\r\n        return 'Breathe';\r\n    }\r\n  };\r\n\r\n  const getPhaseColor = () => {\r\n    switch (phase) {\r\n      case 'inhale':\r\n        return 'from-blue-300 to-blue-500';\r\n      case 'hold':\r\n        return 'from-purple-300 to-purple-500';\r\n      case 'exhale':\r\n        return 'from-green-300 to-green-500';\r\n      case 'pause':\r\n        return 'from-gray-300 to-gray-400';\r\n      default:\r\n        return 'from-blue-300 to-blue-500';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex flex-col items-center gap-6\">\r\n      {/* Breathing Circle */}\r\n      <div className=\"relative w-40 h-40 flex items-center justify-center\">\r\n        <div\r\n          className={`w-32 h-32 rounded-full bg-gradient-to-br ${getPhaseColor()} \r\n                     transition-transform duration-300 ease-in-out shadow-lg`}\r\n          style={{\r\n            transform: `scale(${scale})`,\r\n            transition: isActive ? 'transform 0.1s ease-in-out' : 'transform 0.3s ease-in-out',\r\n          }}\r\n        />\r\n        \r\n        {/* Center dot */}\r\n        <div className=\"absolute w-4 h-4 bg-white rounded-full shadow-md\" />\r\n      </div>\r\n\r\n      {/* Phase Text */}\r\n      <div className=\"text-center\">\r\n        <p className=\"text-2xl font-semibold text-primary mb-2\">\r\n          {getPhaseText()}\r\n        </p>\r\n        <p className=\"text-sm text-muted-foreground\">\r\n          Follow the circle's rhythm\r\n        </p>\r\n      </div>\r\n\r\n      {/* Breathing Pattern Info */}\r\n      <div className=\"grid grid-cols-4 gap-4 text-center text-xs\">\r\n        <div className={`p-2 rounded ${phase === 'inhale' ? 'bg-blue-100 text-blue-700' : 'bg-gray-100'}`}>\r\n          <div className=\"font-semibold\">Inhale</div>\r\n          <div>{pattern.inhale}s</div>\r\n        </div>\r\n        <div className={`p-2 rounded ${phase === 'hold' ? 'bg-purple-100 text-purple-700' : 'bg-gray-100'}`}>\r\n          <div className=\"font-semibold\">Hold</div>\r\n          <div>{pattern.hold}s</div>\r\n        </div>\r\n        <div className={`p-2 rounded ${phase === 'exhale' ? 'bg-green-100 text-green-700' : 'bg-gray-100'}`}>\r\n          <div className=\"font-semibold\">Exhale</div>\r\n          <div>{pattern.exhale}s</div>\r\n        </div>\r\n        <div className={`p-2 rounded ${phase === 'pause' ? 'bg-gray-200 text-gray-700' : 'bg-gray-100'}`}>\r\n          <div className=\"font-semibold\">Pause</div>\r\n          <div>{pattern.pause}s</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 626, "column": 0}, "map": {"version":3,"sources":["file:///D:/h2skill/Manas_Mitra_Chatbot/src/components/mindfulness/session-player.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { useState, useEffect, useCallback } from 'react';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Progress } from '@/components/ui/progress';\r\nimport { Pause, Play, Square, Volume2 } from 'lucide-react';\r\nimport { generateMindfulnessSession } from '@/ai/flows/personalized-mindfulness-session';\r\nimport { useMindfulnessSession } from '@/hooks/use-mindfulness-session';\r\nimport type { MindfulnessSessionType, ExperienceLevel, MindfulnessSession } from '@/lib/types';\r\nimport { BreathingVisualizer } from './breathing-visualizer';\r\n\r\ninterface SessionPlayerProps {\r\n  sessionType: MindfulnessSessionType;\r\n  duration: number;\r\n  experience: ExperienceLevel;\r\n  onEnd: () => void;\r\n}\r\n\r\nexport function SessionPlayer({ sessionType, duration, experience, onEnd }: SessionPlayerProps) {\r\n  const [session, setSession] = useState<MindfulnessSession | null>(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [currentGuidanceIndex, setCurrentGuidanceIndex] = useState(0);\r\n  \r\n  const {\r\n    isPlaying,\r\n    currentTime,\r\n    progress,\r\n    startSession,\r\n    pauseSession,\r\n    stopSession,\r\n  } = useMindfulnessSession(duration * 60); // Convert to seconds\r\n\r\n  // Generate session content\r\n  useEffect(() => {\r\n    const generateSession = async () => {\r\n      try {\r\n        setIsLoading(true);\r\n        const mood = 'calm'; // Could be pulled from recent check-ins\r\n        \r\n        const result = await generateMindfulnessSession({\r\n          mood,\r\n          sessionType,\r\n          duration,\r\n          experience,\r\n        });\r\n\r\n        const newSession: MindfulnessSession = {\r\n          id: Date.now().toString(),\r\n          title: result.title,\r\n          description: result.description,\r\n          sessionType,\r\n          duration,\r\n          instructions: result.instructions,\r\n          guidance: result.guidance,\r\n          benefits: result.benefits,\r\n          createdAt: new Date().toISOString(),\r\n        };\r\n\r\n        setSession(newSession);\r\n      } catch (error) {\r\n        console.error('Failed to generate session:', error);\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    generateSession();\r\n  }, [sessionType, duration, experience]);\r\n\r\n  // Update guidance based on time\r\n  useEffect(() => {\r\n    if (!session || !isPlaying) return;\r\n\r\n    const currentMinutes = Math.floor(currentTime / 60);\r\n    const currentSeconds = currentTime % 60;\r\n    const timeString = `${currentMinutes}:${currentSeconds.toString().padStart(2, '0')}`;\r\n\r\n    const guidanceIndex = session.guidance.findIndex(g => g.timeMarker === timeString);\r\n    if (guidanceIndex !== -1 && guidanceIndex !== currentGuidanceIndex) {\r\n      setCurrentGuidanceIndex(guidanceIndex);\r\n    }\r\n  }, [currentTime, session, isPlaying, currentGuidanceIndex]);\r\n\r\n  const handlePlayPause = () => {\r\n    if (isPlaying) {\r\n      pauseSession();\r\n    } else {\r\n      startSession();\r\n    }\r\n  };\r\n\r\n  const handleStop = () => {\r\n    stopSession();\r\n    onEnd();\r\n  };\r\n\r\n  const formatTime = (seconds: number) => {\r\n    const mins = Math.floor(seconds / 60);\r\n    const secs = seconds % 60;\r\n    return `${mins}:${secs.toString().padStart(2, '0')}`;\r\n  };\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"container mx-auto px-4 py-8 max-w-2xl\">\r\n        <Card>\r\n          <CardHeader className=\"text-center\">\r\n            <CardTitle>Preparing Your Session</CardTitle>\r\n            <CardDescription>Creating a personalized experience just for you...</CardDescription>\r\n          </CardHeader>\r\n          <CardContent>\r\n            <div className=\"flex items-center justify-center py-8\">\r\n              <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-primary\"></div>\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!session) {\r\n    return (\r\n      <div className=\"container mx-auto px-4 py-8 max-w-2xl\">\r\n        <Card>\r\n          <CardHeader className=\"text-center\">\r\n            <CardTitle>Session Unavailable</CardTitle>\r\n            <CardDescription>Unable to generate your session. Please try again.</CardDescription>\r\n          </CardHeader>\r\n          <CardContent className=\"text-center\">\r\n            <Button onClick={onEnd}>Return to Selection</Button>\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const currentGuidance = session.guidance[currentGuidanceIndex];\r\n\r\n  return (\r\n    <div className=\"container mx-auto px-4 py-8 max-w-2xl\">\r\n      <Card className=\"min-h-[600px]\">\r\n        <CardHeader className=\"text-center\">\r\n          <CardTitle className=\"font-headline\">{session.title}</CardTitle>\r\n          <CardDescription>{session.description}</CardDescription>\r\n        </CardHeader>\r\n        \r\n        <CardContent className=\"space-y-6\">\r\n          {/* Progress and Timer */}\r\n          <div className=\"text-center space-y-2\">\r\n            <div className=\"text-3xl font-mono font-bold\">\r\n              {formatTime(currentTime)} / {formatTime(duration * 60)}\r\n            </div>\r\n            <Progress value={progress} className=\"w-full h-2\" />\r\n          </div>\r\n\r\n          {/* Breathing Visualizer for breathing exercises */}\r\n          {sessionType === 'breathing' && isPlaying && (\r\n            <div className=\"flex justify-center py-8\">\r\n              <BreathingVisualizer isActive={isPlaying} />\r\n            </div>\r\n          )}\r\n\r\n          {/* Current Guidance */}\r\n          <Card className=\"bg-accent/20 border-accent\">\r\n            <CardContent className=\"pt-6\">\r\n              <div className=\"text-center\">\r\n                <Volume2 className=\"w-6 h-6 mx-auto mb-3 text-accent-foreground\" />\r\n                <p className=\"text-lg leading-relaxed\">\r\n                  {currentGuidance?.text || \"Take a deep breath and settle into a comfortable position.\"}\r\n                </p>\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n\r\n          {/* Control Buttons */}\r\n          <div className=\"flex justify-center gap-4\">\r\n            <Button\r\n              variant=\"outline\"\r\n              size=\"lg\"\r\n              onClick={handlePlayPause}\r\n              className=\"flex items-center gap-2\"\r\n            >\r\n              {isPlaying ? (\r\n                <>\r\n                  <Pause className=\"w-5 h-5\" />\r\n                  Pause\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <Play className=\"w-5 h-5\" />\r\n                  {currentTime > 0 ? 'Resume' : 'Start'}\r\n                </>\r\n              )}\r\n            </Button>\r\n            \r\n            <Button\r\n              variant=\"destructive\"\r\n              size=\"lg\"\r\n              onClick={handleStop}\r\n              className=\"flex items-center gap-2\"\r\n            >\r\n              <Square className=\"w-5 h-5\" />\r\n              End Session\r\n            </Button>\r\n          </div>\r\n\r\n          {/* Instructions (shown when paused or not started) */}\r\n          {!isPlaying && (\r\n            <Card className=\"bg-secondary/20\">\r\n              <CardHeader>\r\n                <CardTitle className=\"text-sm\">Session Instructions</CardTitle>\r\n              </CardHeader>\r\n              <CardContent>\r\n                <ul className=\"text-sm space-y-1\">\r\n                  {session.instructions.map((instruction, index) => (\r\n                    <li key={index} className=\"flex items-start gap-2\">\r\n                      <span className=\"w-2 h-2 bg-primary rounded-full mt-1.5 flex-shrink-0\" />\r\n                      {instruction}\r\n                    </li>\r\n                  ))}\r\n                </ul>\r\n              </CardContent>\r\n            </Card>\r\n          )}\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1092, "column": 0}, "map": {"version":3,"sources":["file:///D:/h2skill/Manas_Mitra_Chatbot/src/components/ui/select.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\r\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Select = SelectPrimitive.Root\r\n\r\nconst SelectGroup = SelectPrimitive.Group\r\n\r\nconst SelectValue = SelectPrimitive.Value\r\n\r\nconst SelectTrigger = React.forwardRef<\r\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\r\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\r\n>(({ className, children, ...props }, ref) => (\r\n  <SelectPrimitive.Trigger\r\n    ref={ref}\r\n    className={cn(\r\n      \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\r\n      className\r\n    )}\r\n    {...props}\r\n  >\r\n    {children}\r\n    <SelectPrimitive.Icon asChild>\r\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\r\n    </SelectPrimitive.Icon>\r\n  </SelectPrimitive.Trigger>\r\n))\r\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\r\n\r\nconst SelectScrollUpButton = React.forwardRef<\r\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\r\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\r\n>(({ className, ...props }, ref) => (\r\n  <SelectPrimitive.ScrollUpButton\r\n    ref={ref}\r\n    className={cn(\r\n      \"flex cursor-default items-center justify-center py-1\",\r\n      className\r\n    )}\r\n    {...props}\r\n  >\r\n    <ChevronUp className=\"h-4 w-4\" />\r\n  </SelectPrimitive.ScrollUpButton>\r\n))\r\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\r\n\r\nconst SelectScrollDownButton = React.forwardRef<\r\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\r\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\r\n>(({ className, ...props }, ref) => (\r\n  <SelectPrimitive.ScrollDownButton\r\n    ref={ref}\r\n    className={cn(\r\n      \"flex cursor-default items-center justify-center py-1\",\r\n      className\r\n    )}\r\n    {...props}\r\n  >\r\n    <ChevronDown className=\"h-4 w-4\" />\r\n  </SelectPrimitive.ScrollDownButton>\r\n))\r\nSelectScrollDownButton.displayName =\r\n  SelectPrimitive.ScrollDownButton.displayName\r\n\r\nconst SelectContent = React.forwardRef<\r\n  React.ElementRef<typeof SelectPrimitive.Content>,\r\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\r\n>(({ className, children, position = \"popper\", ...props }, ref) => (\r\n  <SelectPrimitive.Portal>\r\n    <SelectPrimitive.Content\r\n      ref={ref}\r\n      className={cn(\r\n        \"relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\r\n        position === \"popper\" &&\r\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\r\n        className\r\n      )}\r\n      position={position}\r\n      {...props}\r\n    >\r\n      <SelectScrollUpButton />\r\n      <SelectPrimitive.Viewport\r\n        className={cn(\r\n          \"p-1\",\r\n          position === \"popper\" &&\r\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\r\n        )}\r\n      >\r\n        {children}\r\n      </SelectPrimitive.Viewport>\r\n      <SelectScrollDownButton />\r\n    </SelectPrimitive.Content>\r\n  </SelectPrimitive.Portal>\r\n))\r\nSelectContent.displayName = SelectPrimitive.Content.displayName\r\n\r\nconst SelectLabel = React.forwardRef<\r\n  React.ElementRef<typeof SelectPrimitive.Label>,\r\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\r\n>(({ className, ...props }, ref) => (\r\n  <SelectPrimitive.Label\r\n    ref={ref}\r\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\r\n    {...props}\r\n  />\r\n))\r\nSelectLabel.displayName = SelectPrimitive.Label.displayName\r\n\r\nconst SelectItem = React.forwardRef<\r\n  React.ElementRef<typeof SelectPrimitive.Item>,\r\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\r\n>(({ className, children, ...props }, ref) => (\r\n  <SelectPrimitive.Item\r\n    ref={ref}\r\n    className={cn(\r\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\r\n      className\r\n    )}\r\n    {...props}\r\n  >\r\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\r\n      <SelectPrimitive.ItemIndicator>\r\n        <Check className=\"h-4 w-4\" />\r\n      </SelectPrimitive.ItemIndicator>\r\n    </span>\r\n\r\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\r\n  </SelectPrimitive.Item>\r\n))\r\nSelectItem.displayName = SelectPrimitive.Item.displayName\r\n\r\nconst SelectSeparator = React.forwardRef<\r\n  React.ElementRef<typeof SelectPrimitive.Separator>,\r\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\r\n>(({ className, ...props }, ref) => (\r\n  <SelectPrimitive.Separator\r\n    ref={ref}\r\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\r\n    {...props}\r\n  />\r\n))\r\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\r\n\r\nexport {\r\n  Select,\r\n  SelectGroup,\r\n  SelectValue,\r\n  SelectTrigger,\r\n  SelectContent,\r\n  SelectLabel,\r\n  SelectItem,\r\n  SelectSeparator,\r\n  SelectScrollUpButton,\r\n  SelectScrollDownButton,\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1284, "column": 0}, "map": {"version":3,"sources":["file:///D:/h2skill/Manas_Mitra_Chatbot/src/components/ui/slider.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport * as SliderPrimitive from \"@radix-ui/react-slider\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Slider = React.forwardRef<\r\n  React.ElementRef<typeof SliderPrimitive.Root>,\r\n  React.ComponentPropsWithoutRef<typeof SliderPrimitive.Root>\r\n>(({ className, ...props }, ref) => (\r\n  <SliderPrimitive.Root\r\n    ref={ref}\r\n    className={cn(\r\n      \"relative flex w-full touch-none select-none items-center\",\r\n      className\r\n    )}\r\n    {...props}\r\n  >\r\n    <SliderPrimitive.Track className=\"relative h-2 w-full grow overflow-hidden rounded-full bg-secondary\">\r\n      <SliderPrimitive.Range className=\"absolute h-full bg-primary\" />\r\n    </SliderPrimitive.Track>\r\n    <SliderPrimitive.Thumb className=\"block h-5 w-5 rounded-full border-2 border-primary bg-background ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\" />\r\n  </SliderPrimitive.Root>\r\n))\r\nSlider.displayName = SliderPrimitive.Root.displayName\r\n\r\nexport { Slider }\r\n"],"names":[],"mappings":";;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,uBAAS,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG5B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,kKAAA,CAAA,OAAoB;QACnB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;0BAET,8OAAC,kKAAA,CAAA,QAAqB;gBAAC,WAAU;0BAC/B,cAAA,8OAAC,kKAAA,CAAA,QAAqB;oBAAC,WAAU;;;;;;;;;;;0BAEnC,8OAAC,kKAAA,CAAA,QAAqB;gBAAC,WAAU;;;;;;;;;;;;AAGrC,OAAO,WAAW,GAAG,kKAAA,CAAA,OAAoB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 1336, "column": 0}, "map": {"version":3,"sources":["file:///D:/h2skill/Manas_Mitra_Chatbot/src/components/mindfulness/session-selector.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { useState } from 'react';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\r\nimport { Slider } from '@/components/ui/slider';\r\nimport { Play } from 'lucide-react';\r\nimport type { MindfulnessSessionType, ExperienceLevel } from '@/lib/types';\r\n\r\ninterface SessionSelectorProps {\r\n  sessionType: MindfulnessSessionType;\r\n  onStartSession: (type: MindfulnessSessionType, duration: number, experience: ExperienceLevel) => void;\r\n}\r\n\r\nexport function SessionSelector({ sessionType, onStartSession }: SessionSelectorProps) {\r\n  const [duration, setDuration] = useState([5]);\r\n  const [experience, setExperience] = useState<ExperienceLevel>('beginner');\r\n\r\n  const handleStart = () => {\r\n    onStartSession(sessionType, duration[0], experience);\r\n  };\r\n\r\n  const getDurationLabel = (minutes: number) => {\r\n    if (minutes === 1) return '1 minute';\r\n    return `${minutes} minutes`;\r\n  };\r\n\r\n  const getRecommendedDuration = () => {\r\n    switch (sessionType) {\r\n      case 'mindful-moment':\r\n        return [1, 5];\r\n      case 'breathing':\r\n        return [3, 10];\r\n      case 'meditation':\r\n        return [5, 20];\r\n      case 'body-scan':\r\n        return [10, 25];\r\n      default:\r\n        return [3, 15];\r\n    }\r\n  };\r\n\r\n  const [minDuration, maxDuration] = getRecommendedDuration();\r\n\r\n  return (\r\n    <div className=\"space-y-4\">\r\n      <div>\r\n        <label className=\"text-sm font-medium mb-2 block\">Duration</label>\r\n        <div className=\"px-2\">\r\n          <Slider\r\n            value={duration}\r\n            onValueChange={setDuration}\r\n            min={minDuration}\r\n            max={maxDuration}\r\n            step={1}\r\n            className=\"mb-2\"\r\n          />\r\n          <div className=\"flex justify-between text-xs text-muted-foreground\">\r\n            <span>{getDurationLabel(minDuration)}</span>\r\n            <span className=\"font-medium\">{getDurationLabel(duration[0])}</span>\r\n            <span>{getDurationLabel(maxDuration)}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div>\r\n        <label className=\"text-sm font-medium mb-2 block\">Experience Level</label>\r\n        <Select value={experience} onValueChange={(value: ExperienceLevel) => setExperience(value)}>\r\n          <SelectTrigger>\r\n            <SelectValue />\r\n          </SelectTrigger>\r\n          <SelectContent>\r\n            <SelectItem value=\"beginner\">Beginner</SelectItem>\r\n            <SelectItem value=\"intermediate\">Intermediate</SelectItem>\r\n            <SelectItem value=\"advanced\">Advanced</SelectItem>\r\n          </SelectContent>\r\n        </Select>\r\n      </div>\r\n\r\n      <Button onClick={handleStart} className=\"w-full\" size=\"lg\">\r\n        <Play className=\"w-4 h-4 mr-2\" />\r\n        Start Session\r\n      </Button>\r\n    </div>\r\n  );\r\n}"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AACA;AANA;;;;;;;AAcO,SAAS,gBAAgB,EAAE,WAAW,EAAE,cAAc,EAAwB;IACnF,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;QAAC;KAAE;IAC5C,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAmB;IAE9D,MAAM,cAAc;QAClB,eAAe,aAAa,QAAQ,CAAC,EAAE,EAAE;IAC3C;IAEA,MAAM,mBAAmB,CAAC;QACxB,IAAI,YAAY,GAAG,OAAO;QAC1B,OAAO,GAAG,QAAQ,QAAQ,CAAC;IAC7B;IAEA,MAAM,yBAAyB;QAC7B,OAAQ;YACN,KAAK;gBACH,OAAO;oBAAC;oBAAG;iBAAE;YACf,KAAK;gBACH,OAAO;oBAAC;oBAAG;iBAAG;YAChB,KAAK;gBACH,OAAO;oBAAC;oBAAG;iBAAG;YAChB,KAAK;gBACH,OAAO;oBAAC;oBAAI;iBAAG;YACjB;gBACE,OAAO;oBAAC;oBAAG;iBAAG;QAClB;IACF;IAEA,MAAM,CAAC,aAAa,YAAY,GAAG;IAEnC,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;;kCACC,8OAAC;wBAAM,WAAU;kCAAiC;;;;;;kCAClD,8OAAC;wBAAI,WAAU;;0CACb,8OAAC,kIAAA,CAAA,SAAM;gCACL,OAAO;gCACP,eAAe;gCACf,KAAK;gCACL,KAAK;gCACL,MAAM;gCACN,WAAU;;;;;;0CAEZ,8OAAC;gCAAI,WAAU;;kDACb,8OAAC;kDAAM,iBAAiB;;;;;;kDACxB,8OAAC;wCAAK,WAAU;kDAAe,iBAAiB,QAAQ,CAAC,EAAE;;;;;;kDAC3D,8OAAC;kDAAM,iBAAiB;;;;;;;;;;;;;;;;;;;;;;;;0BAK9B,8OAAC;;kCACC,8OAAC;wBAAM,WAAU;kCAAiC;;;;;;kCAClD,8OAAC,kIAAA,CAAA,SAAM;wBAAC,OAAO;wBAAY,eAAe,CAAC,QAA2B,cAAc;;0CAClF,8OAAC,kIAAA,CAAA,gBAAa;0CACZ,cAAA,8OAAC,kIAAA,CAAA,cAAW;;;;;;;;;;0CAEd,8OAAC,kIAAA,CAAA,gBAAa;;kDACZ,8OAAC,kIAAA,CAAA,aAAU;wCAAC,OAAM;kDAAW;;;;;;kDAC7B,8OAAC,kIAAA,CAAA,aAAU;wCAAC,OAAM;kDAAe;;;;;;kDACjC,8OAAC,kIAAA,CAAA,aAAU;wCAAC,OAAM;kDAAW;;;;;;;;;;;;;;;;;;;;;;;;0BAKnC,8OAAC,kIAAA,CAAA,SAAM;gBAAC,SAAS;gBAAa,WAAU;gBAAS,MAAK;;kCACpD,8OAAC,kMAAA,CAAA,OAAI;wBAAC,WAAU;;;;;;oBAAiB;;;;;;;;;;;;;AAKzC","debugId":null}},
    {"offset": {"line": 1566, "column": 0}, "map": {"version":3,"sources":["file:///D:/h2skill/Manas_Mitra_Chatbot/src/app/mindfulness/page.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { useState } from 'react';\r\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Badge } from '@/components/ui/badge';\r\nimport { Brain, Clock, Heart, Sparkles } from 'lucide-react';\r\nimport type { MindfulnessSessionType, ExperienceLevel } from '@/lib/types';\r\nimport { SessionPlayer } from '@/components/mindfulness/session-player';\r\nimport { SessionSelector } from '@/components/mindfulness/session-selector';\r\n\r\nexport default function MindfulnessPage() {\r\n  const [selectedSession, setSelectedSession] = useState<{\r\n    type: MindfulnessSessionType;\r\n    duration: number;\r\n    experience: ExperienceLevel;\r\n  } | null>(null);\r\n  const [isSessionActive, setIsSessionActive] = useState(false);\r\n\r\n  const sessionTypes = [\r\n    {\r\n      type: 'breathing' as MindfulnessSessionType,\r\n      title: 'Breathing Exercise',\r\n      description: 'Calm your mind with guided breathing patterns',\r\n      icon: Heart,\r\n      color: 'bg-blue-100 text-blue-700',\r\n      benefits: ['Reduces anxiety', 'Improves focus', 'Calms nervous system'],\r\n    },\r\n    {\r\n      type: 'meditation' as MindfulnessSessionType,\r\n      title: 'Guided Meditation',\r\n      description: 'Find inner peace with gentle meditation guidance',\r\n      icon: Brain,\r\n      color: 'bg-purple-100 text-purple-700',\r\n      benefits: ['Enhances awareness', 'Reduces stress', 'Improves emotional balance'],\r\n    },\r\n    {\r\n      type: 'body-scan' as MindfulnessSessionType,\r\n      title: 'Body Scan',\r\n      description: 'Release tension by connecting with your body',\r\n      icon: Sparkles,\r\n      color: 'bg-green-100 text-green-700',\r\n      benefits: ['Releases tension', 'Improves body awareness', 'Promotes relaxation'],\r\n    },\r\n    {\r\n      type: 'mindful-moment' as MindfulnessSessionType,\r\n      title: 'Mindful Moment',\r\n      description: 'Quick mindfulness practice for busy times',\r\n      icon: Clock,\r\n      color: 'bg-orange-100 text-orange-700',\r\n      benefits: ['Quick stress relief', 'Present moment awareness', 'Easy to integrate'],\r\n    },\r\n  ];\r\n\r\n  const handleStartSession = (type: MindfulnessSessionType, duration: number, experience: ExperienceLevel) => {\r\n    setSelectedSession({ type, duration, experience });\r\n    setIsSessionActive(true);\r\n  };\r\n\r\n  const handleSessionEnd = () => {\r\n    setIsSessionActive(false);\r\n    setSelectedSession(null);\r\n  };\r\n\r\n  if (isSessionActive && selectedSession) {\r\n    return (\r\n      <SessionPlayer\r\n        sessionType={selectedSession.type}\r\n        duration={selectedSession.duration}\r\n        experience={selectedSession.experience}\r\n        onEnd={handleSessionEnd}\r\n      />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"container mx-auto px-4 py-8 max-w-6xl\">\r\n      <div className=\"text-center mb-8\">\r\n        <h1 className=\"text-3xl font-bold mb-4 font-headline text-primary\">\r\n          Mindfulness Sessions\r\n        </h1>\r\n        <p className=\"text-lg text-muted-foreground max-w-2xl mx-auto\">\r\n          Take a moment to center yourself. Choose from guided breathing exercises, \r\n          meditations, and mindful moments designed to help you find calm and clarity.\r\n        </p>\r\n      </div>\r\n\r\n      <div className=\"grid gap-6 md:grid-cols-2 mb-8\">\r\n        {sessionTypes.map((session) => {\r\n          const IconComponent = session.icon;\r\n          return (\r\n            <Card key={session.type} className=\"hover:shadow-lg transition-shadow\">\r\n              <CardHeader>\r\n                <div className=\"flex items-center gap-3 mb-2\">\r\n                  <div className={`p-2 rounded-lg ${session.color}`}>\r\n                    <IconComponent className=\"w-6 h-6\" />\r\n                  </div>\r\n                  <CardTitle className=\"font-headline\">{session.title}</CardTitle>\r\n                </div>\r\n                <CardDescription>{session.description}</CardDescription>\r\n              </CardHeader>\r\n              <CardContent>\r\n                <div className=\"space-y-4\">\r\n                  <div>\r\n                    <p className=\"text-sm font-medium mb-2\">Benefits:</p>\r\n                    <div className=\"flex flex-wrap gap-1\">\r\n                      {session.benefits.map((benefit) => (\r\n                        <Badge key={benefit} variant=\"secondary\" className=\"text-xs\">\r\n                          {benefit}\r\n                        </Badge>\r\n                      ))}\r\n                    </div>\r\n                  </div>\r\n                  <SessionSelector\r\n                    sessionType={session.type}\r\n                    onStartSession={handleStartSession}\r\n                  />\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n          );\r\n        })}\r\n      </div>\r\n\r\n      <Card className=\"bg-accent/50\">\r\n        <CardHeader>\r\n          <CardTitle className=\"text-center font-headline\">Getting Started with Mindfulness</CardTitle>\r\n        </CardHeader>\r\n        <CardContent>\r\n          <div className=\"grid gap-4 md:grid-cols-3 text-center\">\r\n            <div>\r\n              <h3 className=\"font-semibold mb-2\">Choose Your Time</h3>\r\n              <p className=\"text-sm text-muted-foreground\">\r\n                Even 3 minutes can make a difference. Start small and build your practice.\r\n              </p>\r\n            </div>\r\n            <div>\r\n              <h3 className=\"font-semibold mb-2\">Find a Quiet Space</h3>\r\n              <p className=\"text-sm text-muted-foreground\">\r\n                Sit comfortably where you won't be disturbed. Use headphones if needed.\r\n              </p>\r\n            </div>\r\n            <div>\r\n              <h3 className=\"font-semibold mb-2\">Be Kind to Yourself</h3>\r\n              <p className=\"text-sm text-muted-foreground\">\r\n                It's normal for your mind to wander. Gently bring your attention back.\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n}"],"names":[],"mappings":"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","debugId":null}}]
}